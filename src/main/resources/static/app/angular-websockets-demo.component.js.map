{"version":3,"file":"angular-websockets-demo.component.js","sourceRoot":"","sources":["angular-websockets-demo.component.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n  TODO: delegate WebSocket access to a supporting service class\n */\n\nimport {Component, Input, ElementRef, ViewChild} from '@angular/core';\nimport './rxjs-operators';\nimport {Subject} from \"rxjs/Rx\";\nimport {$WebSocket} from './ng2-websocket';\nimport { HTTP_PROVIDERS } from '@angular/http';\nimport {PredictionService} from \"./service/prediction.service\";\nimport {PredictionResponse} from \"./model/prediction-response\";\nimport { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';\nimport { MD_TOOLBAR_DIRECTIVES } from '@angular2-material/toolbar';\n//import {FORM_DIRECTIVES} from '@angular/forms';\n//import {MD_RADIO_DIRECTIVES} from '@angular2-material/radio/radio';\n\ndeclare var vis: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'angular-websockets-demo-app',\n  styleUrls: ['angular-websockets-demo.component.css'],\n  providers: [PredictionService, HTTP_PROVIDERS],\n  templateUrl: 'angular-websockets-demo.component.html',\n  directives: [MD_BUTTON_DIRECTIVES, MD_TOOLBAR_DIRECTIVES] //, MD_RADIO_DIRECTIVES,FORM_DIRECTIVES]\n  //directives: [NeuralNetGraphComponent]\n})\nexport class AngularWebsocketsDemoAppComponent {\n  network: any;\n  graph2d: any;\n  nodes: any;\n  edges: any;\n  errorMessage: string;\n  predictionResponse: PredictionResponse;\n  //numInputs: number;\n  inputValues: string[] = [];\n  inputFeatureNames: string[] = [];\n  @ViewChild('neuralNetGraph') div:ElementRef;\n  @ViewChild('scoreGraph') scoreGraph:ElementRef;\n\n  ws: $WebSocket;\n  curSampleName: String = \"\";\n\n  constructor(private predictionService: PredictionService) {\n    //TODO: Modify to inject into constructor?\n    //this.ws = new $WebSocket(\"wss://visualneuralnetservice.cfapps.io:4443/counter\");\n    this.ws = new $WebSocket(\"ws://localhost:8080/counter\");\n  }\n\n  connectToWebSocket() {\n    var subject: Subject<any>;\n\n    console.log(\"Connect button clicked\");\n\n    this.ws.connect(false);\n\n    console.log(\"ws.getReadyState(): \" + this.ws.getReadyState());\n\n    subject = this.ws.getDataStream();\n\n    if (subject.observers == null || subject.observers.length == 0) {\n      subject.subscribe(\n        evt => {\n          //var count = JSON.parse(evt.data).value;\n          //console.log('Got: ' + evt.data);\n          console.log('Got: ' + evt.data);\n          var jsonObject = JSON.parse(evt.data);\n\n          this.updateNeuralNetGraph(jsonObject);\n\n          // TODO: Uncomment when Vis Graph2d works in this environment\n          //this.updateScoreGraph(jsonObject);\n        },\n        function (e) {\n          console.log('Error: ' + e.message);\n        },\n        function () {\n          console.log('Completed!');\n        }\n      );\n    }\n  }\n\n  handleUnsubscribeButtonClicked() {\n    console.log(\"Unsubscribe button clicked\");\n    console.log(\"ws.getReadyState(): \" + this.ws.getReadyState());\n\n    this.ws.getDataStream().unsubscribe();\n  }\n\n  handleDisconnectButtonClicked() {\n    console.log(\"Disconnect button clicked\");\n    console.log(\"ws.getReadyState(): \" + this.ws.getReadyState());\n\n    this.ws.close(true);\n  }\n\n  /*\n  handleSendButtonClicked() {\n    console.log(\"Send button clicked\");\n    console.log(\"ws.getReadyState(): \" + this.ws.getReadyState());\n\n    //let name = \"James\";\n\n    //this.ws.send(JSON.stringify({ 'name': name }));\n    this.ws.send(JSON.stringify({ 'name': this.inputName }));\n  }\n  */\n\n  handleSampleButtonClicked(sampleName: string) {\n    console.log(\"Sample button clicked: \" + sampleName);\n    console.log(\"ws.getReadyState(): \" + this.ws.getReadyState());\n    this.curSampleName = sampleName;\n\n    //let name = \"James\";\n\n    //this.ws.send(JSON.stringify({ 'name': name }));\n    this.ws.send(JSON.stringify({ 'name': sampleName }));\n  }\n\n  handlePredictButtonClicked() {\n    console.log(\"Predict button clicked, inputValues: \" + this.inputValues);\n    this.predictionService.getPredictionResponse(this.inputValues)\n      .subscribe(\n        predictionResponse => {\n          this.predictionResponse = predictionResponse;\n          this.updateActivationsPrediction(predictionResponse);\n        },\n        error =>  this.errorMessage = <any>error);\n\n  }\n\n  ngAfterViewInit() {\n    this.connectToWebSocket();\n  }\n\n  updateNeuralNetGraph(results: any) {\n    // Make note of the number of inputs TODO: perhaps remove this and the numInputs member variable\n    //this.numInputs = results.neuralNetLayerList[0].neuralNetNodeList.length;\n\n    // Create an array element for each input\n    this.inputValues = [];\n    this.inputFeatureNames = [];\n    for (var inputIdx in results.neuralNetLayerList[0].neuralNetNodeList) {\n      //console.log(\"inputIdx: \" + inputIdx);\n      var neuralNode = results.neuralNetLayerList[0].neuralNetNodeList[inputIdx];\n      if (neuralNode != undefined) {\n        this.inputFeatureNames.push(neuralNode.name);\n      }\n      this.inputValues.push(\"\");\n    }\n\n    this.nodes = new vis.DataSet(results.nodes);\n    this.edges = new vis.DataSet(results.edges);\n\n    var data = {\n      nodes: this.nodes,\n      edges: this.edges\n    };\n    this.network = new vis.Network(this.div.nativeElement, data, this.createGraphOptions());\n\n  }\n\n  updateActivationsPrediction(predictionResp: PredictionResponse) {\n    if (predictionResp != null) {\n      //alert(\"predictionResp.prediction: \" + predictionResp.prediction);\n    }\n\n    var numInputs = this.inputFeatureNames.length;\n    var nodeLabel: string = \"\";\n    for (let nodeId in predictionResp.activations) {\n      nodeLabel = this.createNodeLabel(predictionResp.activations[nodeId] + ((predictionResp.inputsNormalized && Number(nodeId) < numInputs) ? \"n\" : \"\"));\n      this.nodes.update([{id: nodeId, image: nodeLabel, shape: 'circularImage', borderWidth: \"1\"}]);\n\n      // Put wider border around predicted label\n      if (Number(nodeId) == predictionResp.activations.length - predictionResp.numOutputNodes + predictionResp.prediction) {\n        this.nodes.update([{id: nodeId, borderWidth: \"5\"}]);\n      }\n    }\n    this.network.setOptions(this.createGraphOptions());\n  }\n\n  createNodeLabel(label: String) {\n    var data = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\">' +\n      '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#ffffff\" ></rect>' +\n      '<foreignObject x=\"10\" y=\"11\" width=\"100%\" height=\"100%\">' +\n      '<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"font-size:6px\">' +\n      '<span style=\"color:black;\">' + label +\n      '</span>' +\n      '</div>' +\n      '</foreignObject>' +\n      '</svg>';\n\n\n    var DOMURL = window.URL;\n\n    var img = new Image();\n    var svg = new Blob([data], {type: 'image/svg+xml;charset=utf-8'});\n    var url = DOMURL.createObjectURL(svg);\n\n    return url;\n  }\n\n  createGraphOptions() {\n    var graphOptions = {\n      nodes: {\n        borderWidth:1,\n        size: 40,\n        color: {\n          border: '#406897',\n          background: '#6AAFFF'\n        },\n        font:{color:'#000000'},\n        shape: 'circularImage',\n        shapeProperties: {\n          useBorderWithImage:true\n        }\n      },\n      edges: {\n        color: 'lightgray',\n        font: {\n          color:'#000000',\n          size: 14,\n          align: 'top'\n        },\n        arrowStrikethrough: false,\n        scaling: {\n          label: {\n            enabled: true\n          }\n        }\n      },\n      physics: {\n        enabled: false\n      },\n      layout: {\n        improvedLayout: true,\n        hierarchical: {\n          enabled: true,\n          levelSeparation: 300,\n          nodeSpacing: 125,\n          direction: 'LR',\n          sortMethod: 'directed',\n          blockShifting: true,\n          edgeMinimization: true\n        }\n      }\n    };\n    return graphOptions;\n  }\n\n  // TODO: Work out this functionality\n  updateScoreGraph(results: any) {\n    var items = [\n      {x: '2014-06-11', y: 10},\n      {x: '2014-06-12', y: 25},\n      {x: '2014-06-13', y: 30},\n      {x: '2014-06-14', y: 10},\n      {x: '2014-06-15', y: 15},\n      {x: '2014-06-16', y: 30}\n    ];\n\n    var dataset = new vis.DataSet(items);\n    var options = {};\n    this.graph2d = new vis.Graph2d(this.scoreGraph.nativeElement, dataset, options);\n  }\n}\n"]}
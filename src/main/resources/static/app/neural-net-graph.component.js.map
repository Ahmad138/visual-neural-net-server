{"version":3,"file":"neural-net-graph.component.js","sourceRoot":"","sources":["neural-net-graph.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;GAEG;AACH,qBAAsD,eAAe,CAAC,CAAA;AActE;IAGE;QACE,IAAI,IAAI,GAAG,mIAAmI,CAAC;IACjJ,CAAC;IAED,iDAAe,GAAf;QACE,IAAI,OAAO,GAAG;YACZ,KAAK,EAAE;gBACH;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,EAAE;oBACT,KAAK,EAAE,sBAAsB;iBAC9B;gBACD;oBACE,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,OAAO;oBACd,KAAK,EAAE,sBAAsB;iBAC9B;aACF;YACH,KAAK,EAAE;gBACL;oBACE,IAAI,EAAE,GAAG;oBACT,EAAE,EAAE,GAAG;oBACP,MAAM,EAAE,IAAI;oBACZ,KAAK,EAAE,KAAK;iBACb;aACF;SACF,CAAA;QAED,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAE3C,IAAI,IAAI,GAAG;YACT,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,KAAK;SACb,CAAC;QACF,IAAI,OAAO,GAAG;YACZ,KAAK,EAAE;gBACL,WAAW,EAAC,CAAC;gBACb,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE;oBACL,MAAM,EAAE,SAAS;oBACjB,UAAU,EAAE,SAAS;iBACtB;gBACD,IAAI,EAAC,EAAC,KAAK,EAAC,SAAS,EAAC;gBACtB,KAAK,EAAE,eAAe;gBACtB,eAAe,EAAE;oBACf,kBAAkB,EAAC,IAAI;iBACxB;aACF;YACD,KAAK,EAAE;gBACL,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,EAAC,KAAK,EAAC,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAC;aAChD;SACF,CAAC;QACF,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACvE,CAAC;IAzDD;QAAC,gBAAS,CAAC,gBAAgB,CAAC;;wDAAA;IAV9B;QAAC,gBAAS,CAAC;YACT,sBAAsB;YACtB,QAAQ,EAAE,kBAAkB;YAC5B,SAAS,EAAE,CAAC,oCAAoC,CAAC;YACjD,oCAAoC;YACpC,SAAS,EAAE,EAAE;YACb,WAAW,EAAE,qCAAqC;YAClD,UAAU,EAAE,EAAE;SACf,CAAC;;+BAAA;IA4DF,8BAAC;AAAD,CAAC,AA3DD,IA2DC;AA3DY,+BAAuB,0BA2DnC,CAAA","sourcesContent":["/**\n * Created by jamesweaver on 7/14/16.\n */\nimport {Component, Input, ElementRef, ViewChild} from '@angular/core';\n\ndeclare var vis: any;\n\n\n@Component({\n  //moduleId: module.id,\n  selector: 'neural-net-graph',\n  styleUrls: ['app/neural-net-graph.component.css'],\n  //styleUrls: ['../css/vis.min.css'],\n  providers: [],\n  templateUrl: 'app/neural-net-graph.component.html',\n  directives: []\n})\nexport class NeuralNetGraphComponent {\n  @ViewChild('neuralNetGraph') div:ElementRef;\n\n  constructor() {\n    var json = '{\"nodes\":[{\"id\": \"0\",\"label\": \"\"},{\"id\": \"2\",\"label\": \"-4.45\"}],\"edges\": [{\"from\": \"0\",\"to\": \"2\",\"arrows\": \"to\",\"label\": \"2.6\"}]}';\n  }\n\n  ngAfterViewInit() {\n    var results = {\n      nodes: [\n          {\n            id: \"0\",\n            label: \"\",\n            image: '../image/sigmoid.png'\n          },\n          {\n            id: \"2\",\n            label: \"-4.45\",\n            image: '../image/sigmoid.png'\n          }\n        ],\n      edges: [\n        {\n          from: \"0\",\n          to: \"2\",\n          arrows: \"to\",\n          label: \"2.6\"\n        }\n      ]\n    }\n\n    var nodes = new vis.DataSet(results.nodes);\n    var edges = new vis.DataSet(results.edges);\n\n    var data = {\n      nodes: nodes,\n      edges: edges\n    };\n    var options = {\n      nodes: {\n        borderWidth:1,\n        size: 30,\n        color: {\n          border: '#406897',\n          background: '#6AAFFF'\n        },\n        font:{color:'#000000'},\n        shape: 'circularImage',\n        shapeProperties: {\n          useBorderWithImage:true\n        }\n      },\n      edges: {\n        color: 'lightgray',\n        font: {color:'#000000', size: 14, align: 'top'}\n      }\n    };\n    var network = new vis.Network(this.div.nativeElement, data, options);\n  }\n}\n"]}